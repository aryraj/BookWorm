apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId project.PACKAGE
        minSdkVersion project.MIN_SDK
        targetSdkVersion project.TARGET_SDK
        versionCode Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }



    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            multiDexEnabled false
            shrinkResources false
            testCoverageEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def file = output.outputFile
                    output.outputFile = new File(
                            (String) file.parent,
                            (String) file.name.replace("bookworm", "BookWorm-${variant.versionName}"))

                }
            }

            if (project.hasProperty("SIGN_PROPS")
                    && new File(project.property("SIGN_PROPS").toString()).exists()) {
                signingConfig signingConfigs.signConfig
            }

        }
    }

    productFlavors {
        play {}
        foss {
            applicationId project.PACKAGE + ".foss"
        }
    }

    // Documentation at https://developer.android.com/studio/write/lint.html
    // TL;DR version - It helps checking for code structures and nd help identify and
    // correct problems without having to write test codes
    lintOptions {
        abortOnError false //Whether lint should set the exit code of the process if errors are found
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:design:25.3.1'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'

    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'

    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.github.flavienlaurent.datetimepicker:library:0.0.2'
    compile 'com.larswerkman:HoloColorPicker:1.4'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'de.keyboardsurfer.android.widget:crouton:1.8.4@aar'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile('ch.acra:acra:4.8.5') {
        exclude group: 'org.json'
    }
    compile 'com.github.gabrielemariotti.changeloglib:changelog:2.0.0'
    compile 'be.billington.calendar.recurrencepicker:library:1.1.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:multidex:1.0.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.pushbullet:android-extensions:1.0.4@aar'
    compile 'com.getbase:floatingactionbutton:1.10.1'
    compile 'com.nhaarman.listviewanimations:lib-core:3.1.0@aar'
    compile 'com.nhaarman.listviewanimations:lib-manipulation:3.1.0@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.6@aar') {
        transitive = true
    }
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
    compile ('com.jakewharton:butterknife:8.5.1'){
        exclude group: 'com.android.support'
    }
    compile('org.mnode.ical4j:ical4j:1.0.6') {
        exclude group: 'commons.io'
    }
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile 'com.pnikosis:materialish-progress:1.5'
    compile 'com.github.paolorotolo:appintro:1.3.0'
    compile 'io.reactivex:rxandroid:1.0.1'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'com.artemzin.rxjava:proguard-rules:1.0.14.2'
    compile 'com.tbruyelle.rxpermissions:rxpermissions:0.4.2@aar'
    compile 'org.ocpsoft.prettytime:prettytime:3.2.7.Final'

    compile ('com.github.federicoiosue:SimpleGallery:2.0.0') {
        exclude group: 'com.android.support'
    }
    compile 'com.github.federicoiosue:Springpad-Importer:1.0.1'
    compile 'com.github.federicoiosue:Omni-Notes-Commons:1.2.0'
    compile ('com.github.federicoiosue:checklistview:3.2.1') {
        transitive=false
    }
    compile 'com.github.federicoiosue:pixlui:2.6'

    // Flavors specific dependecies
    playCompile 'io.nlopez.smartlocation:library:3.2.4'
    fossCompile 'com.github.federicoiosue:smart-location-lib:3.2.5'

    playCompile ('com.github.federicoiosue:analitica:0.0.3:googleAnalyticsRelease@aar'){
        transitive=true
    }
    fossCompile ('com.github.federicoiosue:analitica:0.0.3:piwikRelease@aar'){
        transitive=true
    }
    playCompile 'com.google.android.gms:play-services-analytics:10.2.4'
    fossCompile ('org.piwik.sdk:piwik-sdk:1.0.2'){
        exclude group: 'com.jakewharton.timber', module: 'timber'
    }
    fossCompile 'com.jakewharton.timber:timber:4.5.1'

    testCompile 'junit:junit:4.12'
}

configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
    resolutionStrategy.force 'com.android.support:support-annotations:24.0.0'
}

android.productFlavors.each { flavor ->
    String analyticsUrl = flavor.name == 'foss' && ANALYTICS_PARAMS_FOSS?.trim() ? ANALYTICS_PARAMS_FOSS : ANALYTICS_PARAMS
    flavor.buildConfigField 'String', 'ANALYTICS_PARAMS', '"' + analyticsUrl + '"'
    flavor.buildConfigField 'String', 'CRASH_REPORTING_URL', '"' + CRASH_REPORTING_URL + '"'
    flavor.buildConfigField 'String', 'VERSION_CHECK_URL', '"' + VERSION_CHECK_URL + '"'
    flavor.buildConfigField 'String', 'MAPS_API_KEY', '"' + MAPS_API_KEY + '"'
}


apply plugin: 'jacoco-android'
jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled true
    xml.enabled true
}

jacoco {
    toolVersion = "0.7.5.201505241946"
}
